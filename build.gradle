plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // email smtp
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.3.1'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // editor
    implementation 'org.jsoup:jsoup:1.14.3'

    // lombok
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // gson - json 메시지를 다루기 위한 라이브러리
    implementation 'com.google.code.gson:gson'

    // Kafka for messaging
    implementation 'org.springframework.kafka:spring-kafka'

    // WebSocket for real-time communication
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
    useJUnitPlatform()
}
